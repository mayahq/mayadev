{
  "openapi": "3.0.2",
  "info": {
    "title": "Maya API",
    "description": "API for instructing Maya to do any task.",
    "contact": {
      "name": "Maya Support",
      "url": "https://mayalabs.io",
      "email": "humans@mayalabs.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1-beta"
  },
  "paths": {
    "/api/v1/session/new": {
      "post": {
        "tags": ["session"],
        "summary": "New Session",
        "description": "Create a new session.",
        "operationId": "new_session_api_v1_session_new_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/session/{session_id}": {
      "get": {
        "tags": ["session"],
        "summary": "Get Session",
        "description": "Get session by session id",
        "operationId": "get_session_api_v1_session__session_id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Session Id", "type": "string" },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      },
      "delete": {
        "tags": ["session"],
        "summary": "Delete Session",
        "operationId": "delete_session_api_v1_session__session_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Session Id", "type": "string" },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/sessions": {
      "get": {
        "tags": ["session"],
        "summary": "List Sessions",
        "operationId": "list_sessions_api_v1_sessions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },

    "/api/v1/session/step/add": {
      "post": {
        "tags": ["session"],
        "summary": "Add Step",
        "operationId": "add_step_api_v1_session_step_add_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddStepRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/session/step/delete": {
      "delete": {
        "tags": ["session"],
        "summary": "Delete Step",
        "operationId": "delete_step_api_v1_session_step_delete_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeleteStepRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/session/clear": {
      "post": {
        "tags": ["session"],
        "summary": "Clear Session",
        "operationId": "clear_session_api_v1_session_clear_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SessionRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/session/undo": {
      "post": {
        "tags": ["session"],
        "summary": "Session Undo",
        "operationId": "session_undo_api_v1_session_undo_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/v1/session/redo": {
      "post": {
        "tags": ["session"],
        "summary": "Session Undo",
        "operationId": "session_undo_api_v1_session_redo_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/v1/session/deploy": {
      "post": {
        "tags": ["session"],
        "summary": "Session Deploy",
        "operationId": "session_deploy_api_v1_session_deploy_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/v1/library/recipe/new": {
      "post": {
        "tags": ["recipe", "recipe"],
        "summary": "Add Recipe",
        "operationId": "add_recipe_api_v1_library_recipe_new_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/v1/library/recipe/{recipeId}": {
      "get": {
        "tags": ["recipe", "recipe"],
        "summary": "Get Recipe",
        "operationId": "get_recipe_api_v1_library_recipe__recipeId__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Recipeid" },
            "name": "recipeId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["recipe", "recipe"],
        "summary": "Delete Recipe",
        "operationId": "delete_recipe_api_v1_library_recipe__recipeId__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Recipeid" },
            "name": "recipeId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/library/recipe/{recipeId}": {
      "put": {
        "tags": ["recipe", "recipe"],
        "summary": "Update Recipe",
        "operationId": "update_recipe_library_recipe__recipeId__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Recipeid" },
            "name": "recipeId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/library/recipes": {
      "get": {
        "tags": ["recipe", "recipe"],
        "summary": "List Recipes",
        "operationId": "list_recipes_api_v1_library_recipes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/library/recipe/teach": {
      "post": {
        "tags": ["recipe", "recipe"],
        "summary": "Teach Recipe",
        "operationId": "teach_recipe_api_v1_library_recipe_teach_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_teach_recipe_api_v1_library_recipe_teach_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/library/step/new": {
      "post": {
        "tags": ["step", "step"],
        "summary": "Add Step",
        "operationId": "add_step_api_v1_library_step_new_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/v1/library/step/{stepId}": {
      "get": {
        "tags": ["step", "step"],
        "summary": "Get Step",
        "operationId": "get_step_api_v1_library_step__stepId__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Stepid" },
            "name": "stepId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["step", "step"],
        "summary": "Update Step",
        "operationId": "update_step_api_v1_library_step__stepId__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Stepid" },
            "name": "stepId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["step", "step"],
        "summary": "Delete Step",
        "operationId": "delete_step_api_v1_library_step__stepId__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Stepid" },
            "name": "stepId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/library/steps": {
      "get": {
        "tags": ["step", "step"],
        "summary": "List Steps",
        "operationId": "list_steps_api_v1_library_steps_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/library/step/teach": {
      "post": {
        "tags": ["step", "steps"],
        "summary": "Teach Step",
        "operationId": "teach_step_api_v1_library_step_teach_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_teach_step_api_v1_library_step_teach_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/library/runtime/new": {
      "post": {
        "tags": ["runtime", "runtime"],
        "summary": "Create Runtime",
        "operationId": "create_runtime_api_v1_library_runtime_new_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/library/runtime/{runtimeId}": {
      "get": {
        "tags": ["runtime", "runtime"],
        "summary": "Get Runtime",
        "operationId": "get_runtime_api_v1_library_runtime__runtimeId__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Runtimeid" },
            "name": "runtimeId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      },
      "delete": {
        "tags": ["runtime", "runtime"],
        "summary": "Delete Runtime",
        "operationId": "delete_runtime_api_v1_library_runtime__runtimeId__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Runtimeid" },
            "name": "runtimeId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/api/v1/library/runtimes": {
      "get": {
        "tags": ["runtime", "runtime"],
        "summary": "List Runtime",
        "operationId": "list_runtime_api_v1_library_runtimes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not found" }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/health": {
      "get": {
        "tags": ["health", "health"],
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddStepRequest": {
        "title": "AddStepRequest",
        "required": ["session_id", "step_prompt", "position"],
        "type": "object",
        "properties": {
          "session_id": { "title": "Session Id", "type": "string" },
          "step_prompt": { "title": "Step Prompt", "type": "string" },
          "position": { "title": "Position", "type": "integer" }
        }
      },
      "Body_teach_recipe_api_v1_library_recipe_teach_post": {
        "title": "Body_teach_recipe_api_v1_library_recipe_teach_post",
        "type": "object",
        "properties": {
          "request_body": { "$ref": "#/components/schemas/RecipeRequest" },
          "file": { "title": "File", "type": "string", "format": "binary" }
        }
      },
      "Body_teach_step_api_v1_library_step_teach_post": {
        "title": "Body_teach_step_api_v1_library_step_teach_post",
        "type": "object",
        "properties": {
          "request_body": {
            "$ref": "#/components/schemas/TeachStepSubflowRequest"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" }
          }
        }
      },
      "ClearSessionRequest": {
        "title": "ClearSessionRequest",
        "required": ["session_id"],
        "type": "object",
        "properties": {
          "session_id": { "title": "Session Id", "type": "string" }
        }
      },
      "DeleteStepRequest": {
        "title": "DeleteStepRequest",
        "required": ["session_id", "step_id"],
        "type": "object",
        "properties": {
          "session_id": { "title": "Session Id", "type": "string" },
          "step_id": { "title": "Step Id", "type": "string" }
        }
      },
      "GenerateRequest": {
        "title": "GenerateRequest",
        "required": ["session_id"],
        "type": "object",
        "properties": {
          "session_id": { "title": "Session Id", "type": "string" }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "RecipeObject": {
        "title": "RecipeObject",
        "type": "object",
        "properties": {
          "text": {
            "title": "Text",
            "type": "string",
            "default": "1. Step 1\n2. Step 2\n3. Step 3."
          },
          "metadata": { "title": "Metadata", "type": "object", "default": {} },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "A human understandable description of what the recipe does"
          }
        }
      },
      "RecipeRequest": {
        "title": "RecipeRequest",
        "type": "object",
        "properties": {
          "storage_mode": {
            "allOf": [{ "$ref": "#/components/schemas/StorageMode" }],
            "default": "elastic"
          },
          "recipe": {
            "title": "Recipe",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RecipeObject" }
          }
        }
      },
      "SessionRequest": {
        "title": "SessionRequest",
        "required": ["session_id", "instruction", "from_scratch"],
        "type": "object",
        "properties": {
          "session_id": { "title": "Session Id", "type": "string" },
          "instruction": { "title": "Instruction", "type": "string" },
          "from_scratch": { "title": "From Scratch", "type": "boolean" }
        }
      },
      "StorageMode": {
        "title": "StorageMode",
        "enum": ["elastic", "s3", "filesystem"],
        "type": "string",
        "description": "An enumeration."
      },
      "TeachStepSubflowRequest": {
        "title": "TeachStepSubflowRequest",
        "required": ["step_subflows"],
        "type": "object",
        "properties": {
          "storage_mode": {
            "allOf": [{ "$ref": "#/components/schemas/StorageMode" }],
            "default": "elastic"
          },
          "step_subflows": {
            "title": "Step Subflows",
            "type": "array",
            "items": { "type": "array", "items": { "type": "object" } }
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] }
          },
          "msg": { "title": "Message", "type": "string" },
          "type": { "title": "Error Type", "type": "string" }
        }
      }
    },
    "securitySchemes": { "HTTPBearer": { "type": "http", "scheme": "bearer" } }
  },
  "tags": [
    {
      "name": "session",
      "description": "A session is a transient interaction with the agent for generating programs and doing actions."
    },
    { "name": "step", "description": "command <> flow pairs with samples." },
    { "name": "recipe", "description": "A collection of steps." },
    {
      "name": "runtime",
      "description": "A tiny piece of compute and flow editor that a session can latch on to in order to run a program."
    },
    {
      "name": "library",
      "description": "A library contains everything persistent about the agent : steps, recipes, runtimes, and soon knowledge bases. Coming soon."
    }
  ]
}
